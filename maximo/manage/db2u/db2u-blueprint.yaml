apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: db2u-blueprint
  namespace: kasten-io
  annotations:
    category: database
    description: Blueprint to suspend and resume Maximo Application Suite Manage before and after the snapshots of the pvc
actions:
  preBackupHook:    
    phases:
    - func: KubeTask
      name: preBackupDiscovery
      args:
        # https://github.com/michaelcourcy/kasten-tools
        image: michaelcourcy/kasten-tools:8.0.8
        command:
        - sh
        - -cx
        - |
          NAMESPACE={{ .Namespace.Name }}

          DB2U_CLUSTER=$(kubectl -n $NAMESPACE get db2ucluster --no-headers | head -n1 | awk '{print $1}'); echo $DB2U_CLUSTER
          kando output db2ucluster_name $DB2U_CLUSTER
          DB2U_STS=$(kubectl -n $NAMESPACE get sts --selector="app=${DB2U_CLUSTER},type=engine" --no-headers | awk '{print $1}'); echo $DB2U_STS
          kando output db2usts_name $DB2U_STS

    - func: KubeExec
      name: suspendDb2Writing
      args:
        namespace: "{{ .Namespace.Name }}"        
        pod: '{{ .Phases.preBackupDiscovery.Output.db2usts_name }}-0'
        container: db2u
        command:
          - bash
          - -o
          - errexit
          - -o
          - pipefail
          - -c
          - |
            manage_snapshots --action suspend
  postBackupHook:    
    phases:
    - func: KubeTask
      name: postBackupDiscovery
      args:
        # https://github.com/michaelcourcy/kasten-tools
        image: michaelcourcy/kasten-tools:8.0.8
        command:
        - sh
        - -cx
        - |
          NAMESPACE={{ .Namespace.Name }}

          DB2U_CLUSTER=$(kubectl -n $NAMESPACE get db2ucluster --no-headers | head -n1 | awk '{print $1}'); echo $DB2U_CLUSTER
          kando output db2ucluster_name $DB2U_CLUSTER
          DB2U_STS=$(kubectl -n $NAMESPACE get sts --selector="app=${DB2U_CLUSTER},type=engine" --no-headers | awk '{print $1}'); echo $DB2U_STS
          kando output db2usts_name $DB2U_STS
    - func: KubeExec
      name: resumeDb2Writing
      args:
        namespace: "{{ .Namespace.Name }}"        
        pod: '{{ .Phases.postBackupDiscovery.Output.db2usts_name }}-0'
        container: db2u
        command:
          - bash
          - -o
          - errexit
          - -o
          - pipefail
          - -c
          - |
            manage_snapshots --action resume
  
  