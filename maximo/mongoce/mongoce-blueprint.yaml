apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: mongoce-blueprint
  namespace: kasten-io
  annotations:
    category: database
    description: Blueprint to backup and restore MongoDB used by Maximo Application Suite
actions:
  preBackupHook:    
    phases:
    - func: KubeOps
      name: createMongoBackupPod
      args:
        operation: create
        namespace: "{{ .Namespace.Name }}"
        spec: |-
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: mongoce-backup-pvc            
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
          ---
          apiVersion: v1
          kind: Pod
          metadata:
            name: mongoce-backup            
            labels:
              app: mongoce-backup
          spec:
            securityContext: 
              runAsNonRoot: true 
              seccompProfile: 
                type: "RuntimeDefault"
            containers:
            - name: mongoce-backup
              image: mongo:6.0
              command: ["/bin/bash", "-c", "while true; do sleep 30; done"]
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL                
              env:
              - name: MONGO_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: mas-mongo-ce-admin-admin
                    key: password        
              volumeMounts:
              - name: tls-ca
                mountPath: /var/lib/tls/ca
                readOnly: true
              - name: tls-secret
                mountPath: /var/lib/tls/server
                readOnly: true
              - name: backup-storage
                mountPath: /data/mongo/dumps
            volumes:
            - name: tls-ca
              secret:
                secretName: mas-mongo-ce-ca-certificate
                items:
                  - key: ca.crt
                    path: ca.crt
            - name: tls-secret
              secret:
                secretName: mas-mongo-ce-server-certificate-key
                items:
                  - key: mongo.pem
                    path: mongo.pem
            - name: backup-storage
              persistentVolumeClaim:
                claimName: mongoce-backup-pvc
            imagePullSecrets:
              - name: my-dockerhub-secret
            restartPolicy: Never
    - func: WaitV2
      name: waitForMongoceBackupPodReady
      args:
        timeout: 2m
        conditions:
          anyOf:
          - condition: '{{ $available := false }}{{ range $condition := $.status.conditions }}{{ if and (eq .type "Ready") (eq .status "True") }}{{ $available = true }}{{ end }}{{ end }}{{ $available }}'
            objectReference:
              apiVersion: "v1"
              group: ""
              name: mongoce-backup
              namespace: "{{ .Namespace.Name }}"
              resource: "pods"
    - func: KubeExec
      name: createDumps
      args:
        namespace: "{{ .Namespace.Name }}"
        pod: mongoce-backup
        container: mongoce-backup
        command:
          - bash
          - -o
          - errexit
          - -o
          - pipefail
          - -c
          - |
            echo "Starting mongodump for mas_dev_catalog"
            mongodump --uri="mongodb://admin:$MONGO_ADMIN_PASSWORD@mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017,mas-mongo-ce-1.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017,mas-mongo-ce-2.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017/?replicaSet=mas-mongo-ce&tls=true&authSource=admin" --sslCAFile=/var/lib/tls/ca/ca.crt --archive=/data/mongo/dumps/mas_dev_core.archive -d mas_dev_core
            echo "Completed mongodump for mas_dev_catalog"
            echo "Starting mongodump for mas_dev_catalog"
            mongodump --uri="mongodb://admin:$MONGO_ADMIN_PASSWORD@mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017,mas-mongo-ce-1.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017,mas-mongo-ce-2.mas-mongo-ce-svc.mongoce.svc.cluster.local:27017/?replicaSet=mas-mongo-ce&tls=true&authSource=admin" --sslCAFile=/var/lib/tls/ca/ca.crt --archive=/data/mongo/dumps/mas_dev_catalog.archive -d mas_dev_catalog
            echo "Completed mongodump for mas_dev_catalog"
  postBackupHook:    
    phases:
    - func: KubeOps
      name: deleteMongoBackupPod
      args:
        operation: delete
        objectReference:
          apiVersion: v1
          group: ""
          resource: "pods"
          name: "mongoce-backup"
          namespace: "{{ .Namespace.Name }}"
    - func: KubeOps
      name: deleteMongoBackupPVC
      args:
        operation: delete
        objectReference:
          apiVersion: v1
          group: ""
          resource: "persistentvolumeclaims"
          name: "mongoce-backup-pvc"
          namespace: "{{ .Namespace.Name }}"